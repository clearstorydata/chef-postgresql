#!/usr/bin/env bash
# Auto-generated by chef
#
# Use this script to fully restore postgres from the backup location configure in <%= @envdir %>
# This will completely remove the existing database.

echo 
echo "This script needs to be run as root."
echo "This script will destroy all data in <%= @datadir %>!"
echo

set -x

today=$(date "+%Y%m%d_%H%M%S")
psql_dir=<%= @datadir %>

echo "Stopping Postgresql"
/etc/init.d/postgresql stop
if [ $? -ne 0 ]
then
  echo "Failed to stop postgresql!  Exiting."
  exit 1
fi
echo "Moving the postgresql data directory."
mv "${psql_dir}" "${psql_dir}.${today}"
if [ $? -ne 0 ]
then
  echo "Failed to move existing postgresql directory!  Exiting."
  exit 1
fi
echo "Begin restore of base backup."
sudo -u postgres envdir <%= @envdir %>  /usr/local/bin/wal-e backup-fetch ${psql_dir} LATEST
if [ $? -ne 0 ]
then
  echo "Failed to run base backup-fetch for postgresql!  Exiting."
  exit 1
fi
echo "restore_command = 'envdir <%= @envdir %> /usr/local/bin/wal-e wal-fetch \"%f\" \"%p\"'" | sudo -u postgres tee ${psql_dir}/recovery.conf
echo "Restart postgres to begin restoring remaining WAL files (This will take some time to complete)"
/etc/init.d/postgresql start
if [ $? -ne 0 ]
then
  echo "Failed to start postgresql!  Exiting."
  echo "(view the postgresql log for more details)"
  exit 1
fi
echo
echo "The Original postgres data directory has been moved to ${psql_dir}.${today} and should be"
echo "deleted once it has been confirmed that the restore was successful and correct."
echo
